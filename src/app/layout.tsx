"use client";

// import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

import { GlobalValueProvider } from "@/components/providers/GlobalValueProvider"

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

const RootLayout = ({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) => {
  return (
    <html lang="ja">
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
      <GlobalValueProvider>
        {children}
      </GlobalValueProvider>
      </body>
    </html>
  );
}

export default RootLayout

// export default function App({ Component, pageProps }) {
//   を
//   export default const App = ({ Component, pageProps }) => {
//   にするとエラーになってしまう。
  
//   export default function だとこのままではアロー関数にできない。
//   一行ではできない。
  
//   const App = ({ Component, pageProps }) => {
//   としたあとに
//   一番下に
//   export default App
//   と追加する
  